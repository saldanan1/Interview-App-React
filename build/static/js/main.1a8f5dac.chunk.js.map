{"version":3,"sources":["Pictures.js","HomePage.js","EntriesData.js","AboutMeData.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","paddingBottom","paddingTop","paddingLeft","gridList","width","height","float","text","title","position","zIndex","textname","img","Pictures","props","classes","className","GridList","cellHeight","cols","link","map","tile","GridListTile","key","src","alt","description","fontWeight","entries","name","aboutme","App","id","to","path","ProjectsPage","AboutMePage","entry","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1a8f5dac.chunk.js","sourcesContent":["import React from 'react';\nimport './Pictures.css';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { homepagedata } from './HomePageData';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    paddingBottom: 100,\n    paddingTop: 200,\n    paddingLeft: 50\n  },\n  gridList: {\n    width: 600,\n    height: 1000,\n    float: 'right'\n  },\n  text:{\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    paddingLeft: 100\n  },\n  title:{\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    position: \"absolute\",\n    zIndex: 1\n  },\n  textname:{\n\n  },\n  img:{\n    height: 1000,\n  }\n}));\nexport default function Pictures(props) {\n  const classes = useStyles(); \n    return(\n      <div className={classes.root}>\n        <GridList cellHeight={500}className={classes.gridList} cols={1}>\n          {props.link.map((tile) => (\n            <GridListTile key={tile} cols={tile.cols || 1}>\n                  <img src={tile} alt={tile}/>\n            </GridListTile>\n          ))}\n          <div className={classes.text}>{props.description}</div>\n        </GridList>\n        \n      </div>\n    )\n}\n\n","import React from 'react';\nimport './HomePage.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { homepagedata } from './HomePageData'\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    paddingBottom: 100,\n    paddingTop: 200,\n    paddingLeft: 50\n  },\n  gridList: {\n    width: 600,\n    height: 750,\n    float: \"right\"\n  },\n  text:{\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    fontWeight: 'bold'\n  }\n}));\nexport default function HomePage(props) {\n  const classes = useStyles(); \n    return(\n      <div className={classes.root}>\n        <GridList cellHeight={300}className={classes.gridList} cols={1}>\n            <GridListTile key={\"text-about-me\"} cols={1 || 1}>\n            {homepagedata.map((tile) => (\n                <div className={classes.text}>{tile.title}</div>\n            ))}\n            </GridListTile>\n        </GridList>\n      </div>\n    )\n}\n\n","export const entries = [\n    {\n      name: \"Discord Elo Bot\",\n      description: \"A discord bot aimed at tracking 'ratings' or 'elo' in online seasonal competitions. This is a passion project that started as a discussion between users on a Magic the Gathering(MTG) Discord Server.\\\n      With the recent quarantine, people are unable to leave their homes to play MTG at their local card stores. With this, the MTG community has taken the online Discord Servers by storm.\\\n      They have created competitive enviornments where users play online, and then 'log' them with the help of a Discord Bot.\\\n      Wins and losses raise and lower your online 'score' respectively.\",\n      link: [\n        'https://noahsaldanadesign.com/img/Discord%20Bot.png',\n        \"https://noahsaldanadesign.com/img/Discord%20Bot2.png\",\n        \"https://noahsaldanadesign.com/img/Discord%20Bot3.png\",\n        \"https://noahsaldanadesign.com/img/MongoDB.png\"\n      ],\n    },\n    {\n      name: \"NuVu\",\n      description: \"'NuVu is a full-time innovation school for middle and high school students.\\\n      NuVuâ€™s pedagogy is based on the architectural Studio model and geared around multi-disciplinary, collaborative projects.\\\n      We teach students how to navigate the messiness of the creative process, from inception to completion by prototyping and testing.'\\\n      Projects range greatly at NuVu, and I've had my fair share of them. From Aerial Filmmaking to Drone Assembly to RC Cars to AR Games to Battlebots,\\\n      there's something for everyone here.\",\n      link: [\n        \"https://noahsaldanadesign.com/img/IMG_3177.jpg\",\n      ],\n    },\n    {\n      name: \"MTGM\",\n      description: \"Magic the Gathering Manager (MTGM) is a life tracking app for the popular card game Magic the Gathering.\\\n      As frequent players, my friends and I were aware of similar products on the market.\\\n      Many of these apps had underlining problems ranging from paidfeatures to bad coding which led to bugs and glitches.\\\n      MTGM was born from this. It is a solo passion project I developed during my Senior Year in college to combat the issues I had with similar apps.\\\n      From conception to completition, the app was up on the Store in 3 months and taught me greatly about the submitting process, and, more importantly, the value of iteration and drawings.\",      link: [\n        \"https://noahsaldanadesign.com/img/DMhomeicon.png\",\n        \"https://noahsaldanadesign.com/img/MTGM%20in%20Store.png\"\n      ]\n    },\n  ]","export const aboutme = [\n    {\n      name: \"Node JS Enthusiast\",\n      description: \"Recently, I've begun an open sourced project for a community I am apart of. This has led to \\\n      me becoming a moderator for the project's discord. Among my duties maintaing the bot, the issues tab and submissions, \\\n      reaching out to users feedback and bug reporting has begun eating much of my time. We have a strong community forming\\\n      already and I hope for it to grow! Node JS has been a blast to work in and begin this project.\",\n      link: [\n        'https://noahsaldanadesign.com/img/Others/NodeJS.png',\n      ],\n    },\n    {\n      name: \"Personal Life\",\n      description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed enim quam, faucibus eget diam a, aliquet scelerisque lorem. Nullam massa.\\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed enim quam, faucibus eget diam a, aliquet scelerisque lorem. Nullam massa.\",\n      link: [\n        \"https://noahsaldanadesign.com/img/Others/IMG_3153.JPG\",\n      ],\n    },\n    {\n      name: \"Great dancer\",\n      description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed enim quam, faucibus eget diam a, aliquet scelerisque lorem. Nullam massa.\\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed enim quam, faucibus eget diam a, aliquet scelerisque lorem. Nullam massa.\",\n      link: [\n        \"https://noahsaldanadesign.com/img/Others/IMG_5140.JPG\",\n      ]\n    },\n  ]","import React from 'react';\nimport Pictures from \"./Pictures\"\nimport HomePage from \"./HomePage\"\nimport './App.css';\nimport { entries } from './EntriesData.js'\nimport { aboutme } from './AboutMeData.js'\nimport { homepagedata } from './HomePageData.js'\nimport { Navbar, NavDropdown, Nav, Form, FormControl, Button } from 'react-bootstrap';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    paddingBottom: 100\n  },\n  gridList: {\n    width: 400,\n    height: 775,\n  },\n  text:{\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    width: 500,\n    height: 300\n  }\n}));\n\nconst App = () =>{\n    const classes = useStyles(); \n    return (\n          <Router>\n              <section className = \"Welcome-text\">\n                <h1><strong>Hey, I'm Noah SaldaÃ±a</strong></h1>\n                <section className = \"Welcome-sub\">\n                  <p>iOS Developer - Student Mentor - Human-Centered Designer</p>\n                </section>\n                <section className = \"Nav\">\n                  <ul id=\"nav\">\n                    <Link to=\"/projects\">Projects</Link>\n                    <Link to=\"/aboutme\">About Me</Link>\n                    <Link to=\"\">Etc</Link>\n                    <Link to=\"\">Etc</Link>\n                    <Link to=\"\">Etc</Link>\n                    <Link to=\"\">Etc</Link>\n                  </ul>\n                </section>\n                <section>\n                  <GridList cellHeight={500} className={classes.gridList} cols={1}>\n                    <GridListTile key={\"profile-picture\"} cols={1 || 1}>\n                      <img src={\"https://noahsaldanadesign.com/img/IMG_3958.jpg\"} alt={\"\"}/>\n                    </GridListTile>\n                  </GridList>\n                  <GridList cellHeight={500} className={classes.gridList} cols={1}>\n                    <GridListTile key={\"profile-picture\"} cols={1 || 1}>\n                      <img src={\"https://noahsaldanadesign.com/img/Others/IMG_3000.png\"} alt={\"\"}/>\n                    </GridListTile>\n                  </GridList>\n                </section>\n              </section>\n              \n            <Switch>\n              <Route path=\"/projects\">\n                <ProjectsPage />\n              </Route>\n              <Route path=\"/aboutme\">\n                <AboutMePage />\n              </Route>\n              <Route path=\"\">\n                <ProjectsPage />\n              </Route>\n            </Switch>\n        </Router>\n    );\n}\nexport default App;\n\nfunction ProjectsPage() {\n  return <div className=\"App\">\n  <header className=\"App-header\">\n    <section id = \"Pictures\">\n    \n      {entries.map((entry)=>(\n        <Pictures\n        key = {entry.name}\n        name = {entry.name}\n        link = {entry.link}\n        description = {entry.description}\n        />\n      ))}\n    </section>\n  </header>\n  </div>;\n}\nfunction AboutMePage() {\n  return <div className=\"App\">\n  <header className=\"App-header\">\n    <section id = \"Pictures\">\n    \n      {aboutme.map((entry)=>(\n        <Pictures\n        key = {entry.name}\n        name = {entry.name}\n        link = {entry.link}\n        description = {entry.description}\n        />\n      ))}\n    </section>\n  </header>\n  </div>;\n}\n\nfunction HomePageDirect() {\n  return <div className = \"App\">\n    <header className=\"App-header\">\n      <section id = \"HomePageInfo\">\n      {homepagedata.map((entry)=>(\n        <HomePage\n        key = {entry.title}\n        name = {entry.title}\n        description  = {entry.description}\n        />\n      ))}\n      </section>\n    </header>\n  </div>\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}