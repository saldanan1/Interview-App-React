{"ast":null,"code":"var _jsxFileName = \"/Users/noahsaldana/Documents/GitHub/React-Mini-Project/Interview-App-React/src/Pictures.js\";\nimport React from 'react';\nimport './Pictures.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nconst getGridListCols = () => {\n  if (isWidthUp('xl', props.width)) {\n    return 4;\n  }\n\n  if (isWidthUp('lg', props.width)) {\n    return 3;\n  }\n\n  if (isWidthUp('md', props.width)) {\n    return 2;\n  }\n\n  return 1;\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    paddingBottom: 100\n  },\n  gridList: {\n    width: 750,\n    height: 1000,\n    paddingTop: 100\n  },\n  text: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    minHeight: 1000\n  },\n  title: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    position: \"absolute\",\n    zIndex: 1\n  },\n  img: {\n    height: 1000\n  }\n}));\nexport default function Pictures(props) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    cellHeight: 750,\n    className: classes.gridList,\n    cols: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, props.link.map(tile => /*#__PURE__*/React.createElement(GridListTile, {\n    key: tile,\n    cols: tile.cols || 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: tile,\n    alt: tile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, props.description)));\n}","map":{"version":3,"sources":["/Users/noahsaldana/Documents/GitHub/React-Mini-Project/Interview-App-React/src/Pictures.js"],"names":["React","makeStyles","GridList","GridListTile","withWidth","isWidthUp","getGridListCols","props","width","useStyles","theme","root","display","flexWrap","justifyContent","overflow","paddingBottom","gridList","height","paddingTop","text","minHeight","title","position","zIndex","img","Pictures","classes","link","map","tile","cols","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,SAAP,IAAoBC,SAApB,QAAqC,6BAArC;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,MAAID,SAAS,CAAC,IAAD,EAAOE,KAAK,CAACC,KAAb,CAAb,EAAkC;AAChC,WAAO,CAAP;AACD;;AAED,MAAIH,SAAS,CAAC,IAAD,EAAOE,KAAK,CAACC,KAAb,CAAb,EAAkC;AAChC,WAAO,CAAP;AACD;;AAED,MAAIH,SAAS,CAAC,IAAD,EAAOE,KAAK,CAACC,KAAb,CAAb,EAAkC;AAChC,WAAO,CAAP;AACD;;AAED,SAAO,CAAP;AACD,CAdD;;AAgBA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,aAAa,EAAE;AALX,GADiC;AAQvCC,EAAAA,QAAQ,EAAE;AACRT,IAAAA,KAAK,EAAE,GADC;AAERU,IAAAA,MAAM,EAAE,IAFA;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GAR6B;AAavCC,EAAAA,IAAI,EAAC;AACHR,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,QAAQ,EAAE,MAFP;AAGHC,IAAAA,cAAc,EAAE,cAHb;AAIHC,IAAAA,QAAQ,EAAE,QAJP;AAKHM,IAAAA,SAAS,EAAE;AALR,GAbkC;AAoBvCC,EAAAA,KAAK,EAAC;AACJV,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJQ,IAAAA,QAAQ,EAAE,UALN;AAMJC,IAAAA,MAAM,EAAE;AANJ,GApBiC;AA4BvCC,EAAAA,GAAG,EAAC;AACFP,IAAAA,MAAM,EAAE;AADN;AA5BmC,CAAZ,CAAD,CAA5B;AAgCA,eAAe,SAASQ,QAAT,CAAkBnB,KAAlB,EAAyB;AACtC,QAAMoB,OAAO,GAAGlB,SAAS,EAAzB;AACE,sBACE;AAAK,IAAA,SAAS,EAAEkB,OAAO,CAAChB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAE,GAAtB;AAA0B,IAAA,SAAS,EAAEgB,OAAO,CAACV,QAA7C;AAAuD,IAAA,IAAI,EAAE,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,CAACqB,IAAN,CAAWC,GAAX,CAAgBC,IAAD,iBACd,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,IAAnB;AAAyB,IAAA,IAAI,EAAEA,IAAI,CAACC,IAAL,IAAa,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM;AAAK,IAAA,GAAG,EAAED,IAAV;AAAgB,IAAA,GAAG,EAAEA,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CADD,CADH,eAME;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACP,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+Bb,KAAK,CAACyB,WAArC,CANF,CAFF,CADF;AAcH","sourcesContent":["import React from 'react';\nimport './Pictures.css';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nconst getGridListCols = () => {\n  if (isWidthUp('xl', props.width)) {\n    return 4;\n  }\n\n  if (isWidthUp('lg', props.width)) {\n    return 3;\n  }\n\n  if (isWidthUp('md', props.width)) {\n    return 2;\n  }\n\n  return 1;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    paddingBottom: 100\n  },\n  gridList: {\n    width: 750,\n    height: 1000,\n    paddingTop: 100,\n  },\n  text:{\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    minHeight: 1000,\n  },\n  title:{\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    position: \"absolute\",\n    zIndex: 1\n  },\n  img:{\n    height: 1000,\n  }\n}));\nexport default function Pictures(props) {\n  const classes = useStyles(); \n    return(\n      <div className={classes.root}>\n        {/* <div className={classes.title}>{props.name}</div> */}\n        <GridList cellHeight={750}className={classes.gridList} cols={1}>\n          {props.link.map((tile) => (\n            <GridListTile key={tile} cols={tile.cols || 1}>\n                  <img src={tile} alt={tile}/>\n            </GridListTile>\n          ))}\n          <div className={classes.text}>{props.description}</div>\n        </GridList>\n        \n      </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}